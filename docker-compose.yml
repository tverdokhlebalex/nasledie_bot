version: "3.9"

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: questbot
      POSTGRES_USER: questbot
      POSTGRES_PASSWORD: questbot
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U questbot -d questbot -h localhost || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      args:
        PIP_INDEX_URL: https://mirror.yandex.ru/mirrors/pypi/simple
    working_dir: /code/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    env_file:
      - .env
    environment:
      # DB (всё внутри одной сети — используем имя сервиса db)
      DATABASE_URL: postgresql+psycopg://questbot:questbot@db:5432/questbot
      DB_HOST: db
      DB_PORT: "5432"
      DB_NAME: questbot
      DB_USER: questbot
      DB_PASSWORD: questbot

      # Redis
      REDIS_HOST: redis

      # Проектные переменные — явно пробрасываем из .env
      APP_SECRET: ${APP_SECRET}
      ADMIN_SECRET: ${ADMIN_SECRET}
      BOT_TOKEN: ${BOT_TOKEN}
      API_URL: ${API_URL}
      TEAM_SIZE: ${TEAM_SIZE}
      ROUTE_COUNT: ${ROUTE_COUNT}
      PROOFS_DIR: /code/data/proofs
      STRICT_WHITELIST: ${STRICT_WHITELIST}
      WHITELIST_PATH: ${WHITELIST_PATH}
      COORDINATOR_CONTACT: ${COORDINATOR_CONTACT}
      WEBAPP_URL: ${WEBAPP_URL}
      PUBLIC_WEBAPP_URL: ${PUBLIC_WEBAPP_URL}
      WEBAPP_HTML_PATH: /code/app/app/static/webapp.html

    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - .:/code
      - proofs_data:/code/data/proofs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://127.0.0.1:8000/health', timeout=2)"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s

  bot:
    build:
      context: .
      args:
        PIP_INDEX_URL: https://mirror.yandex.ru/mirrors/pypi/simple
    working_dir: /code
    command: python -u -m bot.main
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql+psycopg://questbot:questbot@db:5432/questbot
      DB_HOST: db
      DB_PORT: "5432"
      DB_NAME: questbot
      DB_USER: questbot
      DB_PASSWORD: questbot

      # Для бота тоже пробрасываем нужные переменные (если читаются им)
      APP_SECRET: ${APP_SECRET}
      ADMIN_SECRET: ${ADMIN_SECRET}
      BOT_TOKEN: ${BOT_TOKEN}
      REDIS_HOST: redis
      STRICT_WHITELIST: ${STRICT_WHITELIST}
      WHITELIST_PATH: ${WHITELIST_PATH}
      COORDINATOR_CONTACT: ${COORDINATOR_CONTACT}

    depends_on:
      app:
        condition: service_healthy
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/code
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://app:8000/health', timeout=2)"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 20s

volumes:
  db_data: {}
  proofs_data: {}