#!/bin/bash

# –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞
# –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ —Ç–µ—Å—Ç—ã

set -e

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
APP_SECRET=${APP_SECRET:-"NasledieCode"}

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã
check_containers() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    
    if ! docker-compose ps | grep -q "Up"; then
        error "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker-compose up -d"
        exit 1
    fi
    
    success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API
check_api() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º API..."
    
    response=$(curl -s -o /dev/null -w "%{http_code}" "http://localhost:8000/health" || echo "000")
    
    if [ "$response" = "200" ]; then
        success "API –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        error "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: $response)"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
check_database() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ API
    response=$(curl -s -H "x-app-secret: $APP_SECRET" "http://localhost:8000/api/users/all" || echo "error")
    
    if echo "$response" | grep -q "tg_id" || echo "$response" | grep -q "\[\]"; then
        success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞"
    else
        error "–ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏
check_logs() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –±–æ—Ç–∞
    bot_errors=$(docker-compose logs bot --tail=50 | grep -i "error\|exception\|traceback" | wc -l)
    if [ "$bot_errors" -gt 0 ]; then
        error "–ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö –±–æ—Ç–∞: $bot_errors"
        docker-compose logs bot --tail=10 | grep -i "error\|exception\|traceback"
    else
        success "–û—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ API
    api_errors=$(docker-compose logs app --tail=50 | grep -i "error\|exception\|traceback" | wc -l)
    if [ "$api_errors" -gt 0 ]; then
        error "–ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö API: $api_errors"
        docker-compose logs app --tail=10 | grep -i "error\|exception\|traceback"
    else
        success "–û—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö API –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ API endpoints
check_endpoints() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ API endpoints..."
    
    # Health
    if curl -s "http://localhost:8000/health" | grep -q "ok"; then
        success "Health endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "Health endpoint –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    # Leaderboard (—Ç—Ä–µ–±—É–µ—Ç —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á)
    if [ -n "$APP_SECRET" ]; then
        response=$(curl -s -H "x-app-secret: $APP_SECRET" "http://localhost:8000/api/leaderboard")
        if echo "$response" | grep -q "team_id\|\[\]"; then
            success "Leaderboard API —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            error "Leaderboard API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        fi
    else
        warning "APP_SECRET –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É leaderboard"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üöÄ –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç–∞ '–ù–∞—Å–ª–µ–¥–∏–µ'"
    
    check_containers
    check_api
    check_database
    check_logs
    check_endpoints
    
    log "üéâ –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo ""
    echo "–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
    echo "  source .env.test && ./scripts/e2e.sh"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-}" in
    "help"|"-h"|"--help")
        echo "–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞"
        echo ""
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [help]"
        echo ""
        echo "–ß—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è:"
        echo "  - –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
        echo "  - –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API"
        echo "  - –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î"
        echo "  - –û—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö"
        echo "  - –û—Å–Ω–æ–≤–Ω—ã–µ API endpoints"
        ;;
    *)
        main
        ;;
esac
