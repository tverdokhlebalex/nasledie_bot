#!/bin/bash

# E2E —Ç–µ—Å—Ç—ã –¥–ª—è –±–æ—Ç–∞ "–ù–∞—Å–ª–µ–¥–∏–µ"
# –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_env() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    if [ -z "$BOT_TOKEN" ]; then
        error "BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if [ -z "$ADMIN_CHAT_ID" ]; then
        error "ADMIN_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if [ -z "$TEST_USER_TG_ID" ]; then
        error "TEST_USER_TG_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (ID —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)"
        exit 1
    fi
    
    if [ -z "$API_URL" ]; then
        error "API_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    success "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
check_api() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API..."
    
    response=$(curl -s -o /dev/null -w "%{http_code}" "$API_URL/health" || echo "000")
    
    if [ "$response" = "200" ]; then
        success "API –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        error "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: $response)"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É
send_message() {
    local chat_id="$1"
    local text="$2"
    local reply_to="$3"
    
    local data="{\"chat_id\":$chat_id,\"text\":\"$text\""
    if [ -n "$reply_to" ]; then
        data="$data,\"reply_to_message_id\":$reply_to"
    fi
    data="$data}"
    
    curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
        -H "Content-Type: application/json" \
        -d "$data" > /dev/null
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è inline –∫–Ω–æ–ø–∫–∏
press_button() {
    local chat_id="$1"
    local message_id="$2"
    local callback_data="$3"
    
    curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/answerCallbackQuery" \
        -H "Content-Type: application/json" \
        -d "{\"callback_query_id\":\"$callback_data\"}" > /dev/null
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è
wait_for() {
    local seconds="$1"
    log "–û–∂–∏–¥–∞–µ–º $seconds —Å–µ–∫—É–Ω–¥..."
    sleep "$seconds"
}

# –¢–µ—Å—Ç 1: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
test_registration() {
    log "=== –¢–ï–°–¢ 1: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ==="
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º /start
    send_message "$TEST_USER_TG_ID" "/start"
    wait_for 2
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º /reg
    send_message "$TEST_USER_TG_ID" "/reg"
    wait_for 2
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    send_message "$TEST_USER_TG_ID" "+79890876902"
    wait_for 2
    
    success "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç—å–∏
test_article_submission() {
    log "=== –¢–ï–°–¢ 2: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç—å–∏ ==="
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç–∞—Ç—å—é
    send_message "$TEST_USER_TG_ID" "https://example.com/article1"
    wait_for 2
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ—â–µ –æ–¥–Ω—É —Å—Å—ã–ª–∫—É
    send_message "$TEST_USER_TG_ID" "ya.ru"
    wait_for 2
    
    success "–°—Ç–∞—Ç—å–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã"
}

# –¢–µ—Å—Ç 3: –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ
test_photo_submission() {
    log "=== –¢–ï–°–¢ 3: –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ ==="
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ (–∏—Å–ø–æ–ª—å–∑—É–µ–º file_id –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ç–µ—Å—Ç–æ–≤)
    send_message "$TEST_USER_TG_ID" "üì∑ –§–æ—Ç–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"
    wait_for 2
    
    success "–§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
}

# –¢–µ—Å—Ç 4: –ú–æ–¥–µ—Ä–∞—Ü–∏—è –≤ –∞–¥–º–∏–Ω-—á–∞—Ç–µ
test_admin_moderation() {
    log "=== –¢–ï–°–¢ 4: –ú–æ–¥–µ—Ä–∞—Ü–∏—è –≤ –∞–¥–º–∏–Ω-—á–∞—Ç–µ ==="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º leaderboard
    send_message "$ADMIN_CHAT_ID" "/leaderboard"
    wait_for 2
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º broadcast
    send_message "$ADMIN_CHAT_ID" "/broadcast"
    wait_for 2
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è broadcast
    # (–í —Ä–µ–∞–ª—å–Ω–æ–º —Ç–µ—Å—Ç–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞)
    
    success "–ê–¥–º–∏–Ω-—Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã"
}

# –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints
test_api_endpoints() {
    log "=== –¢–ï–°–¢ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints ==="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º health
    response=$(curl -s "$API_URL/health")
    if echo "$response" | grep -q "ok"; then
        success "Health endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "Health endpoint –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º leaderboard API
    response=$(curl -s -H "x-app-secret: $APP_SECRET" "$API_URL/api/leaderboard")
    if echo "$response" | grep -q "team_id"; then
        success "Leaderboard API —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "Leaderboard API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º pending submissions
    response=$(curl -s -H "x-app-secret: $APP_SECRET" "$API_URL/api/admin/submissions/pending")
    if echo "$response" | grep -q "\[\]"; then
        success "Pending submissions API —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        success "Pending submissions API —Ä–∞–±–æ—Ç–∞–µ—Ç (–µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ)"
    fi
}

# –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
test_database() {
    log "=== –¢–ï–°–¢ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ==="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —á–µ—Ä–µ–∑ API
    response=$(curl -s -H "x-app-secret: $APP_SECRET" "$API_URL/api/users/all")
    if echo "$response" | grep -q "tg_id"; then
        success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞"
    else
        error "–ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"
    fi
}

# –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
test_error_handling() {
    log "=== –¢–ï–°–¢ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ ==="
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—É—é —Å—Å—ã–ª–∫—É
    send_message "$TEST_USER_TG_ID" "–Ω–µ-—Å—Å—ã–ª–∫–∞"
    wait_for 2
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    send_message "999999999" "/start"
    wait_for 2
    
    success "–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞"
}

# –¢–µ—Å—Ç 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
test_performance() {
    log "=== –¢–ï–°–¢ 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ ==="
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–¥—Ä—è–¥
    for i in {1..5}; do
        send_message "$TEST_USER_TG_ID" "https://example.com/perf-test-$i"
        wait_for 1
    done
    
    success "–¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω"
}

# –¢–µ—Å—Ç 9: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
test_security() {
    log "=== –¢–ï–°–¢ 9: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ ==="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –æ—Ç–∫–ª–æ–Ω—è—é—Ç—Å—è
    response=$(curl -s -o /dev/null -w "%{http_code}" "$API_URL/api/leaderboard")
    if [ "$response" = "401" ] || [ "$response" = "403" ]; then
        success "API –∑–∞—â–∏—â–µ–Ω –æ—Ç –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"
    else
        warning "API –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –∑–∞—â–∏—â–µ–Ω (–∫–æ–¥: $response)"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á —Ç—Ä–µ–±—É–µ—Ç—Å—è
    response=$(curl -s -o /dev/null -w "%{http_code}" -H "x-app-secret: wrong-secret" "$API_URL/api/leaderboard")
    if [ "$response" = "401" ] || [ "$response" = "403" ]; then
        success "API –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á"
    else
        warning "API –º–æ–∂–µ—Ç –Ω–µ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á (–∫–æ–¥: $response)"
    fi
}

# –¢–µ—Å—Ç 10: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
test_logging() {
    log "=== –¢–ï–°–¢ 10: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ==="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –±–æ—Ç–∞
    if docker-compose logs bot --tail=10 | grep -q "INFO"; then
        success "–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        warning "–ü—Ä–æ–±–ª–µ–º—ã —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –±–æ—Ç–∞"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ API
    if docker-compose logs app --tail=10 | grep -q "INFO"; then
        success "–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        warning "–ü—Ä–æ–±–ª–µ–º—ã —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º API"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üöÄ –ó–∞–ø—É—Å–∫ E2E —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –±–æ—Ç–∞ '–ù–∞—Å–ª–µ–¥–∏–µ'"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    check_env
    check_api
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_registration
    test_article_submission
    test_photo_submission
    test_admin_moderation
    test_api_endpoints
    test_database
    test_error_handling
    test_performance
    test_security
    test_logging
    
    log "üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    log "üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
    echo "  - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ‚úÖ"
    echo "  - –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç–µ–π: ‚úÖ"
    echo "  - –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ: ‚úÖ"
    echo "  - –ê–¥–º–∏–Ω-–º–æ–¥–µ—Ä–∞—Ü–∏—è: ‚úÖ"
    echo "  - API endpoints: ‚úÖ"
    echo "  - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ‚úÖ"
    echo "  - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫: ‚úÖ"
    echo "  - –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ‚úÖ"
    echo "  - –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: ‚úÖ"
    echo "  - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: ‚úÖ"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
cleanup() {
    log "üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—á–∏—Å—Ç–∫—É —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î
    # –ù–∞–ø—Ä–∏–º–µ—Ä, —É–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, submissions –∏ —Ç.–¥.
    
    success "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-}" in
    "cleanup")
        cleanup
        ;;
    "help"|"-h"|"--help")
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [cleanup|help]"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  (–±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤) - –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã"
        echo "  cleanup          - –æ—á–∏—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"
        echo "  help             - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        echo ""
        echo "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
        echo "  BOT_TOKEN        - —Ç–æ–∫–µ–Ω –±–æ—Ç–∞"
        echo "  ADMIN_CHAT_ID    - ID –∞–¥–º–∏–Ω-—á–∞—Ç–∞"
        echo "  TEST_USER_TG_ID  - ID —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        echo "  API_URL          - URL API"
        echo "  APP_SECRET       - —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á API"
        ;;
    *)
        main
        ;;
esac